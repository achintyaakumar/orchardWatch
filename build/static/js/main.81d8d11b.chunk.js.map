{"version":3,"sources":["logo.svg","Temp.js","App.js","reportWebVitals.js","index.js"],"names":["Temp","useState","currentTempNA","setCurrentTempNA","currentTempSA","setCurrentTempSA","currentRHN","setCurrentRHN","currentRHS","setCurrentRHS","currentTSN","setCurrentTSN","currentTSS","setCurrentTSS","currentLWN","setCurrentLWN","currentLWS","setCurrentLWS","currentDPN","setCurrentDPN","currentDPS","setCurrentDPS","currentRN","setCurrentRN","currentRS","setCurrentRS","currentSRN","setCurrentSRN","currentSRS","setCurrentSRS","useEffect","setInterval","fetch","then","res","json","data","tempN","tempS","RHN","RHS","TSN","TSS","LWN","LWS","DPN","DPS","RN","RS","SRN","SRS","className","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,G,MAAA,IAA0B,kC,eCoF1BA,MAlFf,WAAiB,IAAD,EAE0BC,mBAAS,GAFnC,mBAETC,EAFS,KAEMC,EAFN,OAG0BF,mBAAS,GAHnC,mBAGTG,EAHS,KAGMC,EAHN,OAIoBJ,mBAAS,GAJ7B,mBAITK,EAJS,KAIGC,EAJH,OAKoBN,mBAAS,GAL7B,mBAKTO,EALS,KAKGC,EALH,OAMoBR,mBAAS,GAN7B,mBAMTS,EANS,KAMGC,EANH,OAOoBV,mBAAS,GAP7B,mBAOTW,EAPS,KAOGC,EAPH,OAQoBZ,mBAAS,GAR7B,mBAQTa,EARS,KAQGC,EARH,OASoBd,mBAAS,GAT7B,mBASTe,EATS,KASGC,EATH,OAUoBhB,mBAAS,GAV7B,mBAUTiB,EAVS,KAUGC,EAVH,OAWoBlB,mBAAS,GAX7B,mBAWTmB,EAXS,KAWGC,EAXH,OAYkBpB,mBAAS,GAZ3B,mBAYTqB,EAZS,KAYEC,EAZF,OAakBtB,mBAAS,GAb3B,mBAaTuB,EAbS,KAaEC,EAbF,OAcoBxB,mBAAS,GAd7B,mBAcTyB,EAdS,KAcGC,GAdH,QAeoB1B,mBAAS,GAf7B,qBAeT2B,GAfS,MAeGC,GAfH,MAsChB,OArBAC,qBAAU,WACRC,aAAY,WACZC,MAAM,aAAaC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC9CjC,EAAiBiC,EAAKC,OACtBhC,EAAiB+B,EAAKE,OACtB/B,EAAc6B,EAAKG,KACnB9B,EAAc2B,EAAKI,KACnB7B,EAAcyB,EAAKK,KACnB5B,EAAcuB,EAAKM,KACnB3B,EAAcqB,EAAKO,KACnB1B,EAAcmB,EAAKQ,KACnBzB,EAAciB,EAAKS,KACnBxB,EAAce,EAAKU,KACnBvB,EAAaa,EAAKW,IAClBtB,EAAaW,EAAKY,IAClBrB,GAAcS,EAAKa,KACnBpB,GAAcO,EAAKc,UAEpB,OACA,IAGC,qBAAKC,UAAU,MAAf,SACE,sBAAMA,UAAU,WAAhB,SACE,gCACE,kCACA,+BACE,+CACA,kDAEF,+BACE,mDAAsBjD,EAAtB,WACA,mDAAsBE,EAAtB,cAEF,+BACE,oDAAuBM,EAAvB,WACA,oDAAuBE,EAAvB,cAEF,+BACE,6CAAgBM,EAAhB,WACA,6CAAgBE,EAAhB,cAEF,+BACE,qDAAwBd,EAAxB,OACA,qDAAwBE,EAAxB,UAEF,+BACE,gDAAmBM,EAAnB,OACA,gDAAmBE,EAAnB,UAEF,+BACE,wCAAWM,EAAX,SACA,wCAAWE,EAAX,YAEF,+BACE,mDAAsBE,EAAtB,cACA,mDAAsBE,GAAtB,2BC3DGwB,MAXf,WACE,OACE,sBAAKD,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKE,IAAKC,EAAMH,UAAU,WAAWI,IAAI,WAE3C,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.81d8d11b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React, {useState, useEffect} from 'react';\r\n\r\nfunction Temp() {\r\n\r\nconst [currentTempNA, setCurrentTempNA] = useState(0);\r\nconst [currentTempSA, setCurrentTempSA] = useState(0);\r\nconst [currentRHN, setCurrentRHN] = useState(0);\r\nconst [currentRHS, setCurrentRHS] = useState(0);\r\nconst [currentTSN, setCurrentTSN] = useState(0);\r\nconst [currentTSS, setCurrentTSS] = useState(0);\r\nconst [currentLWN, setCurrentLWN] = useState(0);\r\nconst [currentLWS, setCurrentLWS] = useState(0);\r\nconst [currentDPN, setCurrentDPN] = useState(0);\r\nconst [currentDPS, setCurrentDPS] = useState(0);\r\nconst [currentRN, setCurrentRN] = useState(0);\r\nconst [currentRS, setCurrentRS] = useState(0);\r\nconst [currentSRN, setCurrentSRN] = useState(0);\r\nconst [currentSRS, setCurrentSRS] = useState(0);\r\n\r\nuseEffect(() => {\r\n  setInterval(() => {\r\n  fetch('/api/temp').then(res => res.json()).then(data => {\r\n    setCurrentTempNA(data.tempN);\r\n    setCurrentTempSA(data.tempS);\r\n    setCurrentRHN(data.RHN);\r\n    setCurrentRHS(data.RHS);\r\n    setCurrentTSN(data.TSN);\r\n    setCurrentTSS(data.TSS);\r\n    setCurrentLWN(data.LWN);\r\n    setCurrentLWS(data.LWS);\r\n    setCurrentDPN(data.DPN);\r\n    setCurrentDPS(data.DPS);\r\n    setCurrentRN(data.RN);\r\n    setCurrentRS(data.RS);\r\n    setCurrentSRN(data.SRN);\r\n    setCurrentSRS(data.SRS);\r\n  });\r\n}, 6000)\r\n}, []);\r\n\r\nreturn (\r\n    <div className=\"App\">\r\n      <body className=\"App-body\">\r\n        <table>\r\n          <tbody>\r\n          <tr>\r\n            <th>Orchard North</th>\r\n            <th>Orchard South</th>\r\n          </tr>\r\n          <tr>\r\n            <td>Air temperature: {currentTempNA}°F</td>\r\n            <td>Air temperature: {currentTempSA}°F</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Soil temperature: {currentTSN}°F</td>\r\n            <td>Soil temperature: {currentTSS}°F</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Dew point: {currentDPN}°F</td>\r\n            <td>Dew point: {currentDPS}°F</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Relative humidity: {currentRHN}%</td>\r\n            <td>Relative humidity: {currentRHS}%</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Leaf wetness: {currentLWN}%</td>\r\n            <td>Leaf wetness: {currentLWS}%</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Rain: {currentRN} in</td>\r\n            <td>Rain: {currentRS} in</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Solar Radiation: {currentSRN} W/m²</td>\r\n            <td>Solar Radiation: {currentSRS} W/m²</td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Temp;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Temp from './Temp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      </header>\r\n      <Temp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}